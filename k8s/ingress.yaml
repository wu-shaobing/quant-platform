apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: quant-platform-ingress
  namespace: ${NAMESPACE}
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://your-domain.com"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization"
    nginx.ingress.kubernetes.io/websocket-services: "quant-platform-backend-service"
spec:
  tls:
  - hosts:
    - your-domain.com
    - api.your-domain.com
    secretName: quant-platform-tls
  rules:
  - host: your-domain.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: quant-platform-frontend-service
            port:
              number: 80
  - host: api.your-domain.com
    http:
      paths:
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: quant-platform-backend-service
            port:
              number: 8000
      - path: /ws
        pathType: Prefix
        backend:
          service:
            name: quant-platform-backend-service
            port:
              number: 8000
      - path: /docs
        pathType: Prefix
        backend:
          service:
            name: quant-platform-backend-service
            port:
              number: 8000
      - path: /redoc
        pathType: Prefix
        backend:
          service:
            name: quant-platform-backend-service
            port:
              number: 8000
      - path: /health
        pathType: Prefix
        backend:
          service:
            name: quant-platform-backend-service
            port:
              number: 8000
      - path: /ready
        pathType: Prefix
        backend:
          service:
            name: quant-platform-backend-service
            port:
              number: 8000

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: quant-platform-metrics-ingress
  namespace: ${NAMESPACE}
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: metrics-auth
    nginx.ingress.kubernetes.io/auth-realm: "Metrics Access"
    nginx.ingress.kubernetes.io/whitelist-source-range: "10.0.0.0/8,172.16.0.0/12,192.168.0.0/16"
spec:
  tls:
  - hosts:
    - metrics.your-domain.com
    secretName: quant-platform-metrics-tls
  rules:
  - host: metrics.your-domain.com
    http:
      paths:
      - path: /metrics
        pathType: Prefix
        backend:
          service:
            name: quant-platform-metrics
            port:
              number: 9090

---
apiVersion: v1
kind: Secret
metadata:
  name: metrics-auth
  namespace: ${NAMESPACE}
type: Opaque
data:
  auth: YWRtaW46JGFwcjEkSDY1dnVhNzAkLnRiUGJjSVNkdWJzVGJoOGlPeGcwLwo=  # admin:admin (请更改密码)

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: quant-platform-network-policy
  namespace: ${NAMESPACE}
spec:
  podSelector:
    matchLabels:
      app: quant-platform-backend
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    - namespaceSelector:
        matchLabels:
          name: monitoring
    - podSelector:
        matchLabels:
          app: quant-platform-frontend
    ports:
    - protocol: TCP
      port: 8000
    - protocol: TCP
      port: 9090
  egress:
  - to: []
    ports:
    - protocol: TCP
      port: 5432  # PostgreSQL
    - protocol: TCP
      port: 6379  # Redis
    - protocol: TCP
      port: 53    # DNS
    - protocol: UDP
      port: 53    # DNS
    - protocol: TCP
      port: 443   # HTTPS
    - protocol: TCP
      port: 80    # HTTP
  - to:
    - podSelector:
        matchLabels:
          app: quant-platform-redis
    ports:
    - protocol: TCP
      port: 6379
