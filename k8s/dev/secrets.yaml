# 注意：此文件包含敏感信息，不应提交到版本控制
# 请使用以下方式管理密钥：
# 1. 使用 kubectl create secret 命令创建密钥
# 2. 使用 HashiCorp Vault 或 AWS Secrets Manager
# 3. 使用 CI/CD 管道中的环境变量

# 示例创建命令：
# kubectl create secret generic quant-platform-secrets \
#   --namespace=quant-platform-dev \
#   --from-literal=DATABASE_PASSWORD="your_secure_password" \
#   --from-literal=CTP_DATABASE_URL="postgresql://user:pass@host:5432/db" \
#   --from-literal=REDIS_PASSWORD="your_redis_password" \
#   --from-literal=CTP_JWT_SECRET_KEY="your_jwt_secret_key" \
#   --from-literal=CTP_ENCRYPTION_KEY="your_encryption_key"

apiVersion: v1
kind: Secret
metadata:
  name: quant-platform-secrets
  namespace: quant-platform-dev
  labels:
    app: quant-platform
    environment: development
type: Opaque
# 密钥数据应通过安全方式注入，而不是硬编码在此文件中
data: {}
---
# 注意：Docker registry 密钥应通过安全方式管理
# 示例创建命令：
# kubectl create secret docker-registry registry-secret \
#   --namespace=quant-platform-dev \
#   --docker-server=ghcr.io \
#   --docker-username=your_username \
#   --docker-password=your_token

apiVersion: v1
kind: Secret
metadata:
  name: registry-secret
  namespace: quant-platform-dev
  labels:
    app: quant-platform
type: kubernetes.io/dockerconfigjson
# 密钥数据应通过安全方式注入，而不是硬编码在此文件中
data:
  .dockerconfigjson: ""
